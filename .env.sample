# Database Configuration
DATABASE_URL=postgres://username:password@db:5432/pain_management
POSTGRES_USER=username
POSTGRES_PASSWORD=strong_password_here
POSTGRES_DB=pain_management
POSTGRES_HOST=db
POSTGRES_PORT=5432 # I changed this to 5434 only in docker-compose.yml because 5432 was already being used by another container

# Application Configuration
NODE_ENV=development
SESSION_SECRET=generate_a_strong_random_secret_key_here
INVITE_CODE=your_invite_code_here
# Admin account
ADMIN_USERNAME=admin
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=strong_admin_password_here

# Create a random secret key for SESSION_SECRET
# node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

# Twilio Credentials
TWILIO_ACCOUNT_SID=your_twilio_account_sid
TWILIO_AUTH_TOKEN=your_twilio_auth_token
TWILIO_PHONE_NUMBER=your_twilio_phone_number

# Discord Configuration
DISCORD_BOT_TOKEN=your_discord_bot_token_here
DISCORD_BOT_NAME=url-uploader
DISCORD_APPLICATION_ID=your_discord_application_id
DISCORD_PUBLIC_KEY=your_discord_public_key
DISCORD_BOT_PERMISSIONS=274878221312  # Required permissions: Read Messages, Send Messages, Add Reactions, Read Messag>
BOT_USER_ID=1  # The user ID that the bot will use to save articles. Default is 1 (first user)

# Discord OAuth2 Configuration (if needed later)
DISCORD_CLIENT_SECRET=your_discord_client_secret
DISCORD_REDIRECT_URI=http://localhost:3000/discord/callback

# Bot Invite URL Format (replace YOUR_CLIENT_ID with your actual client ID):
# https://discord.com/oauth2/authorize?client_id=YOUR_CLIENT_ID&permissions=76864&response_type=code&redirect_uri=http>
